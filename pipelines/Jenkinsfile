pipeline {
    agent any
    
    environment {
        ZAP_IMAGE = 'owasp/zap2docker-stable'  // Official ZAP image
        ZAP_URL = 'https://dcodept.unilever.com'
        ZAP_AUTH_URL = 'https://dcodept.unilever.com/sso-dev/login'
        WORKSPACE_DIR = "${WORKSPACE}/zap-reports"
    }
    
    stages {
        stage('Prepare Environment') {
            steps {
                sh '''
                    mkdir -p ${WORKSPACE_DIR}
                    chmod -R 777 ${WORKSPACE} || true  # Fix permission issues
                '''
            }
        }

        stage('Run Authenticated ZAP Scan') {
            steps {
                script {
                    // Start ZAP in daemon mode with your configs
                    sh '''
                        docker rm -f zap-scan || true  # Cleanup old instances
                        docker run -d --name zap-scan \
                          -v ${WORKSPACE}:/zap/wrk:rw \
                          -p 8080:8080 \
                          -e ZAP_USER="${ZAP_USER}" \
                          -e ZAP_PASS="${ZAP_PASS}" \
                          ${ZAP_IMAGE} \
                          zap.sh -daemon -host 0.0.0.0 -port 8080 \
                          -config api.disablekey=true \
                          -configfile /zap/wrk/zap.conf
                    '''
                    
                    // Wait for ZAP to initialize
                    sh 'sleep 30'
                    
                    // Load scripts via ZAP-CLI
                    sh '''
                        docker exec zap-scan zap-cli scripts enable \
                            /zap/wrk/scripts/authentication/unilever-auth.js \
                            --type=authentication
                        docker exec zap-scan zap-cli scripts enable \
                            /zap/wrk/scripts/session/unilever-session.js \
                            --type=session
                    '''
                    
                    // Run the scan
                    sh '''
                        docker exec zap-scan zap-cli active-scan \
                            --scanner all --recursive \
                            --context "Default Context" \
                            ${ZAP_URL}
                    '''
                    
                    // Generate reports
                    sh '''
                        docker exec zap-scan zap-cli report -o /zap/wrk/report.html -f html
                        docker exec zap-scan zap-cli report -o /zap/wrk/report.xml -f xml
                    '''
                }
            }
        }
    }

    post {
        always {
            sh '''
                docker stop zap-scan || true
                docker rm zap-scan || true
                sudo chown -R jenkins:jenkins ${WORKSPACE}  # Fix permissions
            '''
            archiveArtifacts artifacts: 'zap-reports/*.html,zap-reports/*.xml', allowEmptyArchive: true
        }
    }
}
